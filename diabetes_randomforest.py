# -*- coding: utf-8 -*-
"""Diabetes-RandomForest.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11b9wOKREVx3_ERW51F1CM29HUBOjnMzU
"""

import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

df=pd.read_csv('diabetes.csv')

df.head()

df.tail()

df.shape

df.info()

df.isnull().sum()

df.describe()

df['Outcome'].value_counts()

X=df.drop(columns='Outcome',axis=1)
Y=df['Outcome']

X

Y

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

X=df.drop(df.columns[-1], axis=1)
y = df[df.columns[-1]]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

rf_classifier = RandomForestClassifier(n_estimators=100,max_depth=4, random_state=42)
rf_classifier.fit(X_train, y_train)
y_pred = rf_classifier.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
classification_rep = classification_report(y_test, y_pred)

print(f'Final Training Accuracy: {rf_classifier.score(X_train, y_train) * 100:.2f}%')
print(f'Model Accuracy: {rf_classifier.score(X_test, y_test) * 100:.2f}%')